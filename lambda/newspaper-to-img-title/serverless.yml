org: anastaciuswright
app: newspaper-to-text
service: newspaper-to-text
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  # s3 bucket
  s3:
    image_clarin_bucket:
      name: clarin-image-bucket
  iamRoleStatements:
    - Effect: Allow
      Action:
        # IAM permissions needed for uploading files
        - 's3:PutObject'
      Resource: "arn:aws:s3:::clarin-image-bucket/*"
  

package:
  exclude:
    - .idea/**
    - __pycache__/**
    - .pytest_cache/**
    - tesseract/**
    - venv/**
    - build_tesseract.sh
    - Dockerfile
    - lambda_event.json
    - requirements.txt
    - serverless.yml
    - test.jpg
    - test_handler.py
    - use_ocr_as_a_service.py
    - ocr-layer
    - opencv-layer 
    - ocr-layer/**
    - opencv-layer/**

layers:
  OCR:
    path: ocr-layer
    name: ocr-layer
    description: Layer with Tesseract
    compatibleRuntimes:
      - python3.9
    retain: false
    package:
      include:
      - tesseract
  opencv:
    path: opencv-layer
    name: opencv-layer
    description: Layer with OpenCV
    compatibleRuntimes:
      - python3.9
    retain: false
  scraper:
    path: scraper-layer
    name: scraper-layer
    description: Layer with Beautifulsoup4
    compatibleRuntimes:
      - python3.9
    retain: false
  

functions:
  pull_image:
    handler: pull_image.pull_image
    memorySize: 3000
    timeout: 15
    runtime: python3.9
    layers:
    - {Ref: ScraperLambdaLayer}
    events:
      - schedule: cron(0 18 * * ? *)
      - http:
          path: /pull-image
          method: get
          cors: true
    environment:
      BUCKET: arn:aws:s3:::clarin-image-bucket
  ocr:
    handler: handler.ocr
    memorySize: 3008
    timeout: 15
    layers:
      - {Ref: OCRLambdaLayer}
    events:
      - http:
          path: ocr
          method: post
    package:
      include:
        - handler.py
  opencv:
    handler: opencv-handler.detect_title
    memorySize: 3008
    timeout: 15
    layers:
      - {Ref: OpencvLambdaLayer}
    events:
      - http:
          path: /
          method: get
      - s3:
          bucket: clarin-image-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: front_pages/

